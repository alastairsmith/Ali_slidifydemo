?seq_along
x=c("a","b","c","d")
seq_along(x)
class(seq_along(x))
?letter
??letter
??
?sd
add2 <- function(x,y) {
x+y
}
add(2, 4)
add2(2, 4)
above10 <- function(x) {
use <- x > 10
x[use]
}
above <- function(x, n) {
use <- x > n
x[use]
}
x <- c(1:20)
above(x,12)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
?numeric
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA=TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, F)
?mean
search()
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
make.power(3)
cube <- make.power(3)
cube(3)
?cube
square(3)
cube(2)
make.power(2)
getup <- make.power(2)
getup(4)
y <- 10
f <- function(x) {
y<- 2
y^2 +g(x)
}
g <- function(x) {
x*y
}
f(3)
ls(environment(f))
get("x",evnironment(f))
get("x",environment(f))
y<-10
f <- function(x) {
y<- 2
y^2 +g(x)
}
g <- function(x) {
x*y
}
ls(environment(f))
?rep
as.Date("2014-07-12")
x<-as.Date("2014-07-12")
x
unclass(x)
x<-as.Date("2014-12-07")
unclassx
unclass(x)
weekdays("1983-06-12")
weekdays()
weekday()
Weekdays()
Weekdays()
Sys.time
x<-Sys.time()
x
unclass(x)
?strtime
?strptime
70/3.5
cube <- function(x, n) {}
cube <- function(x,n) {
x^3
}
cube(3)
a <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)
}
f(3)
a(3)
z <- 10
a(3)
x <- 5
y<- if(x<3) {
NA
} else {
10
}
y
ls(environment(a))
get("x",environment(a))
x
x
x
a <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)
}
ls(environment(a))
ls(environment(g))
ls(environment(a))
a(3)
ls(environment(a))
z <- 4
a(3)
ls(environment(a))
get("z", environment(a))
search()
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(3,4)
h(3,4,4)
h(3,4,3)
x<- 1:10
if(x>5) {
X<-0
}
x<- 1:10
if(x>5) {
y <- x*10
}
x<- 1:10
if(x>5) {
y <- 10
}
?if
?if
vector
if()
if
x <- 1:10
x
x <- 0
x
?parent.frame
?parent.environment
?parent.env
?parent.frame
sys.frame
search()
swirl()
librairy(swirl)
library(swirl)
ls()
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,20,by=0.5)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2),each=10)
?rep
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Alastair")
my_name
my_char
paste(my_name, collapse = " ")
paste("Hello", "world", sep=" ")
paste("Hello", "world!", sep=" ")
paste(C("X","Y","Z", 1:3, sep=""))
paste(C("X","Y","Z"), 1:3, sep=""))
paste(C("X","Y","Z"), 1:3, sep="")
paste(1:3, C("X","Y","Z"), sep="")
paste(1:3, c("X","Y","Z"), sep="")
LETTERS
paste(LETTERS, 1:4, sep="-")
x <- c(44, )
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[C(3,5,7)]
x[C(3,5,7),]
x[c(3,5,7)]
x[c(3,5,7),]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect("bar")
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(myvector)
dim(my_vector)
length(my_vector)
dim(my_vector) <- C(4, 5)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(mydata) <- cnames
colnames(my_data) <- cnames
my_data
swirl()
install_from_swirl("Data Analysis")
swirl()
nxt()
nxt()
cars
cars$mpgCity
myMPG <- cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
19
library(slidify)
slidify("index.Rmd")
print("update changes with slidify("index.Rmd")")
?print
print(as.character("update changes with slidify("index.Rmd")")
print(as.character("update changes with slidify("index.Rmd"))")
getwd()
?source
source("run_slidify")
source("run_slidify.R")
getwd()
source(run_slidify)
source(~/"run_slidify.R")
source(/"run_slidify.R")
source("/run_slidify.R")
source("run_slidify.R")
setwd(C:/Users/Ali/Data_Science/Ali_slidifydemo)
library(slidify)
source("run_slidify.R")
slidify("index.Rmd")
browseURL("index.html")
publish("alastairsmith", "Ali_slidifydemo")
publish(repo="Ali_slidifydemo")
publish_github(repo="Ali_slidifydemo")
publish_github(repo="Ali_slidifydemo", user="alastairsmith")
system("which git")
system('which git')
publish_github(repo="Ali_slidifydemo", user="alastairsmith")
getwd()
getwd()
